/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETRA = 12;
  /** RegularExpression Id. */
  int DIGITO = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int FOR = 16;
  /** RegularExpression Id. */
  int INT = 17;
  /** RegularExpression Id. */
  int DOUBLE = 18;
  /** RegularExpression Id. */
  int CHAR = 19;
  /** RegularExpression Id. */
  int FLOAT = 20;
  /** RegularExpression Id. */
  int ELSE = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int RETURN = 23;
  /** RegularExpression Id. */
  int BREAK = 24;
  /** RegularExpression Id. */
  int CASE = 25;
  /** RegularExpression Id. */
  int CONST = 26;
  /** RegularExpression Id. */
  int CONTINUE = 27;
  /** RegularExpression Id. */
  int LONG = 28;
  /** RegularExpression Id. */
  int UNSIGNED = 29;
  /** RegularExpression Id. */
  int VOID = 30;
  /** RegularExpression Id. */
  int SWITCH = 31;
  /** RegularExpression Id. */
  int DEFAULTC = 32;
  /** RegularExpression Id. */
  int MAIN = 33;
  /** RegularExpression Id. */
  int ADICAO = 34;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 35;
  /** RegularExpression Id. */
  int DIVISAO = 36;
  /** RegularExpression Id. */
  int SUBTRACAO = 37;
  /** RegularExpression Id. */
  int ATRIBUICAO = 38;
  /** RegularExpression Id. */
  int PORCENTAGEM = 39;
  /** RegularExpression Id. */
  int INCREMENTO = 40;
  /** RegularExpression Id. */
  int DECREMENTO = 41;
  /** RegularExpression Id. */
  int E_COMERCIAL = 42;
  /** RegularExpression Id. */
  int NOT = 43;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 44;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 45;
  /** RegularExpression Id. */
  int MENOR = 46;
  /** RegularExpression Id. */
  int MAIOR = 47;
  /** RegularExpression Id. */
  int IGUAL = 48;
  /** RegularExpression Id. */
  int DIFERENTE = 49;
  /** RegularExpression Id. */
  int PONTOEVIRGULA = 50;
  /** RegularExpression Id. */
  int VIRGULA = 51;
  /** RegularExpression Id. */
  int ABRECOLCHETES = 52;
  /** RegularExpression Id. */
  int FECHACOLCHETES = 53;
  /** RegularExpression Id. */
  int ABRECHAVES = 54;
  /** RegularExpression Id. */
  int FECHACHAVES = 55;
  /** RegularExpression Id. */
  int ABREPARENTESES = 56;
  /** RegularExpression Id. */
  int FECHAPARENTESES = 57;
  /** RegularExpression Id. */
  int DOIS_PONTOS = 58;
  /** RegularExpression Id. */
  int INVALID_SIZE_ID = 59;
  /** RegularExpression Id. */
  int INVALID_LEXICAL = 60;
  /** RegularExpression Id. */
  int INVALID_CONST = 61;
  /** RegularExpression Id. */
  int STRING_CONSTANT = 62;
  /** RegularExpression Id. */
  int NUM = 63;
  /** RegularExpression Id. */
  int ID = 64;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int multilinecoment = 1;
  /** Lexical state. */
  int linecoment = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"/*\"",
    "\"//\"",
    "\"*/\"",
    "<token of kind 9>",
    "<token of kind 10>",
    "<token of kind 11>",
    "<LETRA>",
    "<DIGITO>",
    "\"if\"",
    "\"while\"",
    "\"for\"",
    "\"int\"",
    "\"double\"",
    "\"char\"",
    "\"float\"",
    "\"else\"",
    "\"do\"",
    "\"return\"",
    "\"break\"",
    "\"case\"",
    "\"const\"",
    "\"continue\"",
    "\"long\"",
    "\"unsigned\"",
    "\"void\"",
    "\"switch\"",
    "\"default\"",
    "\"main\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"-\"",
    "\"=\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"&\"",
    "\"!\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"!=\"",
    "\";\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "<INVALID_SIZE_ID>",
    "<INVALID_LEXICAL>",
    "<INVALID_CONST>",
    "<STRING_CONSTANT>",
    "<NUM>",
    "<ID>",
  };

}
